name: Cypress Test
on:

  # Run on any commit to the #master branch
  push:
    branches: [addFile]

  # Run on pull requests into the #master branch

  pull_request:
    branches: [addFile]

  # Allows user to trigger the workflow from GitHub's web UI
  workflow_dispatch:

jobs:
  cypress-test:
    runs-on: ubuntu-latest
    steps:

      # Setup
      - name: Install AppBuilder
        run: docker swarm init && npx digi-serve/ab-cli install ab --stack=ab --port=8080 --db.expose=false --db.password=root --db.encryption=false --tag=develop --nginx.enable=true --ssl.none --bot.enable=false --smtp.enable=false --tenant.username=admin --tenant.password=admin --tenant.email=neo@thematrix.com && cd ./ab && npm install har-validator && npm install && cd .. && mkdir ./ab/test/e2e/cypress/integration/test_cars && sudo systemctl restart docker

      # Up
      - name: Bring up AppBuilder
        run: ./UP.sh -q -t
        working-directory: ./ab
      

      - name: Check out
        uses: actions/checkout@v2
        with:
          path: ./ab/test/e2e/cypress/integration/test_cars
        
      #Run test
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./ab
          project: ./test/e2e
          config: baseUrl=http://localhost:8080,testFiles=**/*.js

          # Wait for the site to be ready
          wait-on: "http://localhost:8080"
          wait-on-timeout: 300

          # We need to set the stack name as an environment variable for
          # the test reset script.
          env: stack=ab
      - run: docker exec $(docker ps | grep "_db" | awk '{ print $1 }') mysql -u root -proot -D appbuilder-admin -e "LOCK TABLES \`AB_CARS_CARsProject\` WRITE; INSERT INTO \`AB_CARS_CARsProject\` (\`uuid\`, \`created_at\`, \`updated_at\`, \`translations\`) VALUES (\"cb46b6b4-dc25-4915-80f7-c1febf26da4a\", \"2021-09-20 06:25:36\", \"2021-09-20 06:25:36\", '[{\"language_code\":\"en\",\"Name\":\"CARS Project 1\"}]'); UNLOCK TABLES; SELECT * FROM \`AB_CARS_CARsProject\`;"
      # - run: docker exec $(docker ps | grep "_db" | awk '{ print $1 }') mysql -u root -proot -D appbuilder-admin -e "SELECT * FROM AB_CARS_ChildrenHome;"